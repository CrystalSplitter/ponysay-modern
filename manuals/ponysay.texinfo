\input texinfo   @c -*-texinfo-*-

@c %**start of header
@setfilename ponysay.info
@settitle Ponysay
@afourpaper
@documentencoding UTF-8
@documentlanguage en
@finalout
@c %**end of header
@set VERSION 1.1

@copying
This manual is for ponysay
(version @value{VERSION}),

Copyright @copyright{} 2012 Mattias Andrée

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying

@ifnottex
@node Top
@top Ponysay: ponies for your terminal
@insertcopying
@end ifnottex

@titlepage
@title Ponysay
@subtitle A cowsay wrapper for ponies.
@subtitle Covers ponysay version @value{VERSION}.
@author by Mattias Andrée

@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents


@menu
* Overview::                            Brief overview of @command{ponysay}.
* Invoking ponysay::                    How to run @command{ponysay}.
* Advanced usage::                      Advanced usage of @command{ponysay}.
* Environment::                         Environment variables.
* Limitations::                         Limitations.
* Problems and requests::               Reports and requests.
* Dependencies::                        Dependencies.
* GNU Free Documentation License::      Copying and sharing this manual.
* Concept index::                       Concept index.
@end menu




@node Overview
@chapter Overview
@cindex overview

@command{ponysay} displays an image of a My Little Pony pony saying some text provided
by the user in a terminal. It is a wrapper for @command{cowsay}. If message is not
provided, e.g. by piping, it accepts standard input. The pony saying the given message
is printed on standard output.

@command{ponythink} is to @command{ponysay} as @command{cowthink} is to @command{cowsay}.




@node Invoking ponysay
@chapter Invoking @command{ponysay}
@cindex invoking
@cindex options
@cindex arguments
@cindex ponythink

The format for running the @command{ponysay} program is:

@example
ponysay [@var{option}@dots{}] [@var{message}]
ponythink [@var{option}@dots{}] [@var{message}]
@end example

Running @command{ponysay} will print a speech balloon,
@command{ponythink} will print a thought balloon.
Otherwise @command{ponysay} and @command{ponythink} is the same thing.

@command{ponysay} supports the following options:

@table @option

@item -h
Show summary of options.

@item -v
Show version of program.

@item -f PONY
Specify the pony that should printed, this can either be a file name or
a pony name printed by @command{ponysay -l}. If it is a file name with
a relative path and does not include a `@code{/}', it must begin with
`@code{./}', this is a @command{cowsay} issue. This option can be used
multiple times to specify a set of ponies from which one will be selected
randomly. If no pony is specified one will be selected randomly.

@item -q [PONY...]
This option requires the extension @command{ponyquotes4ponysay}. By using
this option, a pony will be printed with quotes from her in My Litte Pony:
Friendship is Magic. The pony will be selected randomly, at least one pony
is added as an argument after @command{-q}.

@item -W COLUMN
Specify the screen column where the message should be wrapped,
this is by default 40, which is inherited from @command{cowsay}.

@item -l
Lists all installed ponies. If the extension @command{ponyquotes4ponysay}
is installed the ponies which have quotes, i.e. can be used with the
@command{-q} option, will be mark by being printed in bold or bright
(depending on the terminal.)

@item -L
Lists all installed ponies. If the extension @command{ponyquotes4ponysay}
is installed the ponies which have quotes, i.e. can be used with the
@command{-q} option, will be mark by being printed in bold or bright
(depending on the terminal.) This options differs from @command{-l} by
printed symonym ponies (symbolic links) inside brackes after their
target ponies.
@end table

If neither @command{-q} is used nor any @var{message} is specified, @command{ponysay}
will read the message from stdin (standard input); however, if no arguments
are used that nothing is piped to stdin, a help message will be printed.
If you want to use @command{ponysay} without arguments and enter the message
by hand, you can run @code{cat | ponysay}.



@node Advanced usage
@chapter Advanced usage of @command{ponysay}.
@cindex advanced usage

@cindex fortune
If you have @command{fortune} installed -- this program may be named
@command{fortune-mod} in your GNU/Linux distributions package reposity --
you can run @code{fortune | ponysay} to get a random pony reading a
random fortune cookie.

@cindex on startup
By adding @code{fortune | ponysay} to the end [easiest way] of your
@code{~/.bashrc} -- or equivalent for your shell if use do not use GNU Bash
(standard shell for most distributions now adays) -- you will get the
effect described in the previous paragraph every time you open a terminal.

@cindex tty
@cindex linux vt
If you use TTY and have a custom colour palette, you should also add to your
@code{~/.bashrc}, before @code{fortune | ponysay}:
@example
[[ "$TERM" = "linux" ]] &&
    function ponysay
    @{   exec ponysay "$@@"
        #RESET PALETTE HERE
    @}
@end example

@cindex ponification
@cindex ponypipe
You can ponify text (i.e. replaces words search as ``everyone'' with ``everypony'')
by using @code{fortune | ponypipe} instead of using @command{fortune}.
@command{ponypipe} can be downloaded from @url{https://github.com/maandree/ponypipe}.
Alternatively use can use @command{pinkie} (or @command{pinkiepie}), which can
be downloaded from @url{https://github.com/maandree/pinkie-pie}, which is just
@code{fortune | ponypipe}.
Their is also a large sed script, similar to @command{ponypipe}: @url{http://www.reddit.com/r/mylittlelinux/comments/srixi/using_ponysay_with_a_ponified_fortune_warning/}


@node Environment
@chapter Environment variables
@cindex environment variables
@cindex truncation

@command{ponysay} supports the follow environment variables:

@table @option
@item PONYSAY_BOTTOM
@cindex PONYSAY_BOTTOM
Under TTY (Linux VT), if the output is larger the the screen's height, only
the beginning is printed, leaving two blank lines. If you want the buttom
to be printed rather the the beginning you can export @code{PONYSAY_BOTTOM}
with the value @code{yes}, @code{y} or @code{1}.

@item PONYSAY_SHELL_LINES
@cindex PONYSAY_SHELL_LINES
Under TTY (Linux VT), if the output is larger the the screen's height, two
lines are left blank. If you want more, or less, blank lines you can export
@code{PONYSAY_SHELL_LINES} with the value of how many blank lines you want.
Naturally this takes effect if the output is not actually larger than the
screen.
 
@item PONYSAY_FULL_WIDTH
@cindex PONYSAY_FULL_WIDTH
You can export @code{PONYSAY_FULL_WIDTH} with the value @code{no}, @code{n}
or @code{0}, if you do not want the output to be truncated on the width to
fit the terminal.

@item PONYSAY_TRUNCATE_HEIGHT
@cindex PONYSAY_TRUNCATE_HEIGHT
Export @code{PONYSAY_TRUNCATE_HEIGHT} with the value @code{yes}, @code{y}
or @code{1}, if you want to truncate the output on the height even if you
are not running @command{ponysay} under TTY.
@end table




@node Limitations
@chapter Limitations
@cindex limitations

@menu
* Terminals::           Limitations on terminals.
* Cowsay::              Limitations on cowsay,
@end menu


@node Terminals
@section Terminals

Ponysay works perfectly on @command{xterm}, @command{xterm} like terminals including
@command{putty}, settings may however need to be customised for Unicode Character Set
(UCS) support, but less well, depending on font, on VTE based terminals including
@command{mate-terminal}.

On Linux's native terminal Linux VT (TTY) it works less well, and not good at all with
Kernal Mode Settings (KMS) support. See @url{https://github.com/erkin/ponysay/issues/1}
for more information. @command{ponysay} clears the screen before printing to TTY, this
is because if your graphics driver supports KMS, the colours will be messed by when the
ponies position moves on the screen, this is also reason why the output is truncated on
the height in TTY by default.

Due to extreme limitations in @command{9term} @command{ponysay} will never be able to
run on it.


@node Cowsay
@section Cowsay

When @command{cowsay} determines the length of a word it measures in number of bytes
(in UTF-8), therefore non-ascii words will malformat the balloon with the message.

Further, @command{cowsay} does not recognise ANSI escape sequences, therefore, using
colours and text styling in messages will also malformat the balloon with the message.

@command{cowsay} does not support balloon, including the link between the message and
the pony, customisation, other than using @command{cowthink}. However you can modify
@command{cowsay} (written perl, so you can edit the installed files) to make the balloon
look different, maybe using box drawing characters.

@cindex figlet
@cindex tiolet
@command{cowsay}'s word wrapping handles single line breaks as normal blankspaces,
this messes up messaged created with programs seach as @command{figlet} and @command{TOIlet}.



@node Problems and requests
@chapter Problems and requests

@menu
* Problems::           Reporting bugs.
* Requests::           Requesting ponies.
@end menu


@node Problems
@section Reporting bugs
@cindex bugs

If you find a bug in @command{ponysay}, install the last version
from @url{https://github.com/erkin/ponysay}, and if it is still
present, please report it at @url{https://github.com/erkin/ponysay/issues}.
Please be as descriptive as possible, as it will help us verify it
solve it faster.


@node Requests
@section Requesting ponies
@cindex pony requests

If you want I specific pony added, ask us at @url{https://github.com/erkin/ponysay/issues}
and we will add it. To speed the up the process, if possible, supply good
pictures. Full visibly, transparent background, and pixelated are the
properties that makes a picture good.



@node Dependencies
@chapter Dependencies
@cindex dependencies

@menu
* Required runtime dependencies::       Required runtime dependencies.
* Optional runtime dependencies::       Optional runtime dependencies.
* Package building dependencies::       Package building dependencies.
* Dependencies for pony providers::     Dependencies for pony providers.
@end menu


@node Required runtime dependencies
@section Required runtime dependencies

@table @option
@item bash
Required for the main script [file: @command{ponysay}].
@item cowsay
This is a wrapper for @command{cowsay}.
@item coreutils
The main script [file: @command{ponysay}] uses @command{stty}, @command{cut},
@command{ls}, @command{cat}, @command{sort}, @command{readlink}, @command{pwd},
@command{head} and @command{tail}.
@item sed
Used to remove @code{.pony} from pony names when running @command{ponysay -l}
and @command{ponysay -L}.
@item perl
Required to run @command{ponysay -l} and @command{ponysay -L}.
@end table

@node Optional runtime dependencies
@section Optional runtime dependencies
@cindex extensions
@cindex ponyquotes4ponysay

@table @option
@item ponyquotes4ponysay
For support of My Little Pony quotes with associated pony: the @code{-q} option.
It can be downloaded at @url{https://github.com/maandree/ponyquotes4ponysay}.
@end table


@node Package building dependencies
@section Package building dependencies

@table @option
@item gcc
Used for compiling @command{ponysaytruncater.c}.
@item gzip
Used for compressing manpages.
@item make
Required to run the make script.
@item coreutils
The make script uses @command{install}, @command{unlink}, @command{rm}, @command{ln},
@command{mkdir} and @command{cp}.
@end table


@node Dependencies for pony providers
@section Dependencies for pony providers
@cindex contributing

@table @option
@item make
Required to run @command{make -B ttyponies`}.
@item coreutils
@command{ln} and @command{readlink} are used in the @command{ttyponies} subscript.
@item bash
Used in the ttyponies subscript.
@item util-say
Used by @command{make ttyponies} to build ttyponies from xterm ponies.
It can be downloaded at @url{https://github.com/maandree/util-say}.
@end table



@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include fdl.texinfo

@node Concept index
@appendix Concept index
@printindex cp



@bye

